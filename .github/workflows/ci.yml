---
name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUSTUP_TOOLCHAIN: nightly-2024-12-14

jobs:
  fast-checks:
    name: üèÅ Fast Checks (Format)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/ubuntu
      - name: pin
        run: rustup override set ${RUSTUP_TOOLCHAIN}
      - name: Install required components
        run: rustup component add rustfmt
      - name: Install taplo
        run: cargo install taplo-cli --locked
      - name: Run format checks
        run: |
          taplo format --check --config taplo.toml
          cargo fmt --all -- --check

  build-and-test-matrix:
    name: üõ†Ô∏è Build & Test Matrix
    needs: fast-checks
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Ubuntu
        if: matrix.os == 'ubuntu-latest'
        uses: ./.github/actions/ubuntu
      - name: Setup macOS
        if: matrix.os == 'macos-latest'
        uses: ./.github/actions/macos
      - name: pin
        run: rustup override set ${RUSTUP_TOOLCHAIN}
      - name: compile
        run: cargo build --locked --workspace --features runtime-benchmarks
      - name: test
        run: SKIP_WASM_BUILD=1 cargo test --locked --workspace

  analysis:
    name: ü§ñ Analysis (Clippy & Doc)
    needs: fast-checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Ubuntu
        uses: ./.github/actions/ubuntu
      - name: Install protobuf
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
      - name: pin
        run: rustup override set ${RUSTUP_TOOLCHAIN}
      - name: Install required components
        run: |
          rustup target add wasm32-unknown-unknown
          rustup component add rust-src clippy
      - name: Run clippy
        run: SKIP_WASM_BUILD=1 cargo clippy --locked --workspace
      - name: Run doc
        run: SKIP_WASM_BUILD=1 cargo doc --locked --workspace --no-deps
