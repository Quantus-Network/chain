[package]
name = "resonance-runtime"
description = "Resonance Runtime - Proof of Vibes"
version = "0.1.0"
license = "Apache-2.0"
authors.workspace = true
homepage.workspace = true
repository.workspace = true
edition.workspace = true
publish = false

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
codec = { features = [
	"derive",
], workspace = true }
scale-info = { features = [
	"derive",
	"serde",
], workspace = true }
frame-support = { features = ["experimental"], workspace = true }
frame-system.workspace = true
frame-try-runtime = { optional = true, workspace = true }
frame-executive.workspace = true
frame-metadata-hash-extension.workspace = true
pallet-balances.workspace = true
pallet-sudo.workspace = true
pallet-timestamp.workspace = true
pallet-transaction-payment.workspace = true
sp-api.workspace = true
sp-block-builder.workspace = true
sp-core = { features = ["serde"], workspace = true }
sp-inherents.workspace = true
sp-offchain.workspace = true
sp-runtime = { features = ["serde"], workspace = true }
sp-session.workspace = true
sp-storage.workspace = true
sp-transaction-pool.workspace = true
sp-version = { features = ["serde"], workspace = true }
sp-genesis-builder.workspace = true
frame-system-rpc-runtime-api.workspace = true
pallet-transaction-payment-rpc-runtime-api.workspace = true
frame-benchmarking = { optional = true, workspace = true }
frame-system-benchmarking = { optional = true, workspace = true }

sp-crypto-hashing = { version="0.1.0", default-features=false }
primitive-types = {default-features=false, workspace = true}
pallet-template.workspace = true
sp-std = { version="14.0.0", default-features=false}
schnorrkel = { features = ["preaudit_deprecated"], default-features = false,workspace = true }
merlin = { workspace = true, default-features = false }
array-bytes = { version="6.2.2", default-features = false }
secrecy = { version = "0.8.0", features = ["alloc"], default-features = false }
bip39 = { package = "parity-bip39", version = "2.0.1", default-features = false, features = ["alloc"] }
rand = { version = "0.8.5", features = ["small_rng"], optional = true, default-features = false }
itertools = { version="0.11.0", optional=true }
zeroize = { version="1.8.1", default-features = false }
thiserror = { version="1.0.68",optional=true }
sp-runtime-interface = { version="28.0.0", default-features=false }
ss58-registry = { version = "1.34.0", default-features = false }
bs58 = { version = "0.5.1", default-features = false }
blake2 = { version = "0.10.4", default-features = false, optional=true}
bounded-collections = { version = "0.2.0", default-features = false }
serde = { optional = true, default-features=false, version = "1.0.209"} #features = ["alloc", "derive"]
impl-serde = { optional = true, version = "0.4.0", default-features=false}
k256 = { version = "0.13.3", default-features = false, features = ["alloc", "ecdsa"] }
substrate-bip39 = { version="0.6.0", default-features=false }
strum = { version = "0.26.2", features = ["derive"], default-features = false }
regex = { version = "1.10.2",default-features=false }
lazy_static = { version = "1.4.0", default-features=false }
rusty-crystals-dilithium = { git = "https://gitlab.com/resonance-network/rusty-crystals", package = "rusty-crystals-dilithium", default-features = false, features = ["verifier_only"] }

[build-dependencies]
substrate-wasm-builder = { optional = true, workspace = true, default-features = true }

[dev-dependencies]
serde_json = { workspace = true, default-features = true }


[features]
default = ["std"]
std = [
	"bs58/std",
	"codec/std",
	"itertools",
	"scale-info/std",
	"schnorrkel/std",

	"frame-executive/std",
	"frame-metadata-hash-extension/std",
	"frame-support/std",
	"frame-system-benchmarking?/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",

	"frame-benchmarking?/std",
	"frame-try-runtime?/std",

	"k256/std",
	"merlin/std",

	"pallet-balances/std",
	"pallet-sudo/std",
	"pallet-template/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",

	"rand",

	"impl-serde/std",
	"serde/std",

	"sp-api/std",
	"sp-block-builder/std",
	"sp-core/std",
	"sp-genesis-builder/std",
	"sp-inherents/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-storage/std",
	"sp-std/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	"full_crypto",

	"ss58-registry/std",
	"substrate-bip39/std",
	"substrate-wasm-builder",
	"sp-runtime-interface/std",
	"thiserror",
	"zeroize/std",
]

# Serde support without relying on std features.
serde = [
	"blake2",
	"bounded-collections/serde",
	"bs58/alloc",
	"dep:serde",
	"impl-serde",
	"k256/serde",
	"primitive-types/serde_no_std",
	"scale-info/serde",
	"sp-storage/serde",
]

runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-sudo/runtime-benchmarks",
	"pallet-template/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
]

try-runtime = [
	"frame-executive/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"frame-try-runtime/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-template/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"sp-runtime/try-runtime",
]

# This feature enables all crypto primitives for `no_std` builds like microcontrollers
# or Intel SGX.
# For the regular wasm runtime builds this should not be used.
full_crypto = [
	"blake2",
	"sp-runtime-interface/disable_target_static_assertions",
]

# Enable the metadata hash generation.
#
# This is hidden behind a feature because it increases the compile time.
# The wasm binary needs to be compiled twice, once to fetch the metadata,
# generate the metadata hash and then a second time with the
# `RUNTIME_METADATA_HASH` environment variable set for the `CheckMetadataHash`
# extension.
metadata-hash = ["substrate-wasm-builder/metadata-hash"]

# A convenience feature for enabling things when doing a build
# for an on-chain release.
on-chain-release-build = ["metadata-hash", "sp-api/disable-logging"]
