# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml for the original contents.

[package]
authors = ["Parity Technologies <admin@parity.io>"]
autobenches = false
autobins = false
autoexamples = false
autotests = false
build = "build.rs"
description = "Substrate network protocol"
documentation = "https://docs.rs/sc-network"
edition = "2021"
homepage = "https://paritytech.github.io/polkadot-sdk/"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
name = "sc-network"
readme = "README.md"
repository = "https://github.com/paritytech/polkadot-sdk.git"
version = "0.51.1"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[features]
default = []

[lib]
name = "sc_network"
path = "src/lib.rs"

[[bench]]
harness = false
name = "notifications_protocol"
path = "benches/notifications_protocol.rs"

[[bench]]
harness = false
name = "request_response_protocol"
path = "benches/request_response_protocol.rs"

[dependencies]
array-bytes = { workspace = true, default-features = true }
async-channel.workspace = true
async-trait = { workspace = true }
asynchronous-codec = { workspace = true }
bytes = { workspace = true, default-features = true }
cid = { workspace = true }
codec = { workspace = true, features = ["derive"], default-features = true }
either = { workspace = true, default-features = true }
fnv = { workspace = true }
futures = { workspace = true }
futures-timer = { workspace = true }
ip_network = { workspace = true }
libp2p = { workspace = true, features = [
	"dns",
	"identify",
	"kad",
	"macros",
	"mdns",
	"noise",
	"ping",
	"request-response",
	"tcp",
	"tokio",
	"websocket",
	"yamux",
] }
libp2p-identity = { workspace = true, features = ["dilithium"] }
linked_hash_set = { workspace = true }
log = { workspace = true, default-features = true }
mockall = { workspace = true }
once_cell = { workspace = true }
parking_lot = { workspace = true, default-features = true }
partial_sort = { workspace = true }
pin-project = { workspace = true }
prometheus-endpoint = { workspace = true, default-features = true }
prost = { workspace = true }
rand = { workspace = true, default-features = true }
sc-client-api = { workspace = true, default-features = true }
sc-network-common = { workspace = true, default-features = true }
sc-network-types = { workspace = true, default-features = true }
sc-utils = { workspace = true, default-features = true }
schnellru = { workspace = true }
serde = { workspace = true, features = ["derive"], default-features = true }
serde_json = { workspace = true, default-features = true }
smallvec = { workspace = true, default-features = true }
sp-arithmetic = { workspace = true, default-features = true }
sp-blockchain = { workspace = true, default-features = true }
sp-core = { workspace = true, default-features = true }
sp-inherents = { workspace = true, default-features = true }
sp-runtime = { workspace = true, default-features = true }
sp-std = { workspace = true, default-features = false }
thiserror = { workspace = true, default-features = true }
tokio = { workspace = true, features = ["macros", "net", "sync"], default-features = true }
tokio-stream = { workspace = true }
unsigned-varint = { workspace = true, features = ["asynchronous_codec", "futures"] }
void = { workspace = true }
wasm-timer = { workspace = true }
zeroize = { workspace = true, default-features = true }

[dev-dependencies]
assert_matches = { workspace = true }
criterion = { workspace = true, features = ["async_tokio"], default-features = true }
mockall = { workspace = true }
multistream-select = { workspace = true }
rand = { workspace = true, default-features = true }
sc-block-builder = { workspace = true, default-features = true }
sp-consensus = { workspace = true, default-features = true }
sp-crypto-hashing = { workspace = true, default-features = false }
tempfile = { workspace = true }
tokio = { workspace = true, features = ["macros", "net", "sync"], default-features = true }
tokio-test = { workspace = true }
tokio-util = { workspace = true, features = ["compat"] }

[build-dependencies]
prost-build = { workspace = true }
