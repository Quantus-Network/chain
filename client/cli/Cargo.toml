# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
authors = ["Parity Technologies <admin@parity.io>"]
autobenches = false
autobins = false
autoexamples = false
autotests = false
build = false
description = "Substrate CLI interface."
edition = "2021"
homepage = "https://paritytech.github.io/polkadot-sdk/"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
name = "sc-cli"
readme = "README.md"
repository = "https://github.com/paritytech/polkadot-sdk.git"
version = "0.53.0"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[features]
default = ["rocksdb"]
rocksdb = ["sc-client-db/rocksdb"]

[lib]
name = "sc_cli"
path = "src/lib.rs"

[dependencies]
array-bytes = { workspace = true, default-features = true }
bip39 = { workspace = true, package = "parity-bip39" }
chrono = { workspace = true }
clap = { workspace = true, features = ["derive", "string", "wrap_help"] }
codec = { workspace = true, default-features = true, package = "parity-scale-codec" }
dilithium-crypto = { workspace = true }
fdlimit = { workspace = true }
futures = { workspace = true }
hex = { workspace = true }
itertools = { workspace = true }
libp2p-identity = { workspace = true, features = ["peerid"] }
log = { workspace = true, default-features = true }
names = { workspace = true, default-features = false }
qp-rusty-crystals-dilithium = { workspace = true }
qp-rusty-crystals-hdwallet = { workspace = true }
rand = { workspace = true, default-features = true }
regex = { workspace = true }
rpassword = { workspace = true }
sc-client-api = { workspace = true, default-features = true }
sc-client-db = { workspace = true, default-features = false }
sc-keystore = { workspace = true, default-features = true }
sc-mixnet = { workspace = true, default-features = true }
sc-network = { workspace = true, default-features = true }
sc-service = { workspace = true, default-features = false }
sc-telemetry = { workspace = true, default-features = true }
sc-tracing = { workspace = true, default-features = true }
sc-transaction-pool = { workspace = true, default-features = true }
sc-utils = { workspace = true, default-features = true }
serde = { workspace = true, default-features = true }
serde_json = { workspace = true, default-features = true }
sp-blockchain = { workspace = true, default-features = true }
sp-core = { workspace = true, default-features = true }
sp-keyring = { workspace = true, default-features = true }
sp-keystore = { workspace = true, default-features = true }
sp-panic-handler = { workspace = true, default-features = true }
sp-runtime = { workspace = true, default-features = true }
sp-version = { workspace = true, default-features = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["parking_lot", "rt-multi-thread", "signal"], default-features = true }

[dev-dependencies]
futures-timer = { workspace = true }
tempfile = { workspace = true }
